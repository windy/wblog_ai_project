turbo-frame#comment-frame
  .container data-controller="comment-image"
    .row.justify-content-center
      .col-12.col-lg-9
        - comment = @comment || Comment.new
        = simple_form_for comment, url: blog_comments_path(post), remote: true do |f|
          = f.text_area :content, placeholder: t('comment_placeholder.content'), data: { "comment-image-target": "textarea" }
          .comment-images-container.mb-2 data-comment-image-target="previewContainer"
            .comment-image-limit.text-muted.small
              i.fas.fa-info-circle
              span #{t('comment_placeholder.image_limit', count: 3)}
          
          .comment-image-upload.mb-3
            button.btn.btn-sm.btn-outline-secondary.mr-2 type="button" data-action="comment-image#upload"
              i.fas.fa-image.mr-1
              | #{t('comment_placeholder.upload_image')}
              
            input type="file" style="display:none;" data-comment-image-target="fileInput" accept="image/*" multiple="multiple" data-action="change->comment-image#handleFileSelect"
            
          .row
            .col-12.col-lg-6
              = f.text_field :name, value: cookies[:name], placeholder: t('comment_placeholder.name')
          .row
            .col-12.col-lg-6
              = f.text_field :email, value: cookies[:email], placeholder: t('comment_placeholder.email')
          button.comment-submit type='submit' data-disable-with=t('comment_placeholder.submitting') #{t('comment_placeholder.submit')}
          - if info = flash.now[:notice]
            #alert-container.alert.alert-success
              span.text #{info}
              // ai fix
              button class="close" type='button' data-dismiss='alert'
                span &times;
          - elsif comment.errors.any?
            #alert-container.alert.alert-warning
              span.text #{comment.errors.values.first}
              button class="close" type='button' data-dismiss='alert'
                span &times;
        = render partial: 'comments/comment_content', locals: { comments: comments }